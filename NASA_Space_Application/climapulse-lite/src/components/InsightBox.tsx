'use client';

import React, { useState } from 'react';
import { ClimateInsight } from '@/utils/gemini';

interface InsightBoxProps {
  insight: ClimateInsight | null;
  loading: boolean;
  onRegenerate: () => void;
}

export default function InsightBox({ insight, loading, onRegenerate }: InsightBoxProps) {
  const [isExpanded, setIsExpanded] = useState(false);

  if (loading) {
    return (
      <div className="bg-gradient-to-br from-purple-50 to-blue-50 rounded-lg shadow-md p-6">
        <div className="animate-pulse">
          <div className="flex items-center gap-2 mb-4">
            <div className="h-6 w-6 bg-purple-200 rounded"></div>
            <div className="h-4 bg-purple-200 rounded w-1/3"></div>
          </div>
          <div className="space-y-2">
            <div className="h-4 bg-gray-200 rounded w-full"></div>
            <div className="h-4 bg-gray-200 rounded w-5/6"></div>
            <div className="h-4 bg-gray-200 rounded w-4/6"></div>
          </div>
        </div>
      </div>
    );
  }

  if (!insight) {
    return (
      <div className="bg-gray-50 rounded-lg shadow-md p-6 text-center">
        <div className="text-gray-500 mb-4">
          ü§ñ AI insights will appear here after data loads
        </div>
      </div>
    );
  }

  return (
    <div className="bg-gradient-to-br from-purple-50 to-blue-50 rounded-lg shadow-md p-6">
      <div className="flex items-center justify-between mb-4">
        <h3 className="text-lg font-semibold text-purple-800 flex items-center gap-2">
          üß† AI Climate Insights
        </h3>
        <button
          onClick={onRegenerate}
          className="px-3 py-1 bg-purple-600 text-white text-sm rounded-md hover:bg-purple-700 transition-colors"
          title="Generate new insight"
        >
          ‚Üª Refresh
        </button>
      </div>

      {/* Summary */}
      <div className="mb-4">
        <div className="text-gray-800 leading-relaxed">
          {insight.summary}
        </div>
      </div>

      {/* Key Findings */}
      <div className="mb-4">
        <h4 className="font-medium text-gray-800 mb-2 flex items-center gap-1">
          üîç Key Findings
        </h4>
        <ul className="space-y-2">
          {insight.keyFindings.slice(0, isExpanded ? insight.keyFindings.length : 2).map((finding, index) => (
            <li key={index} className="flex items-start gap-2 text-sm text-gray-700">
              <span className="text-blue-500 mt-1">‚Ä¢</span>
              <span>{finding}</span>
            </li>
          ))}
        </ul>
        
        {insight.keyFindings.length > 2 && (
          <button
            onClick={() => setIsExpanded(!isExpanded)}
            className="text-blue-600 text-sm mt-2 hover:text-blue-800 transition-colors"
          >
            {isExpanded ? 'Show less ‚ñ≤' : `Show ${insight.keyFindings.length - 2} more ‚ñº`}
          </button>
        )}
      </div>

      {/* Outlook */}
      <div className="bg-white/60 rounded-lg p-4 border border-blue-100">
        <h4 className="font-medium text-gray-800 mb-2 flex items-center gap-1">
          üîÆ Outlook
        </h4>
        <div className="text-sm text-gray-700 leading-relaxed">
          {insight.outlook}
        </div>
      </div>

      {/* Footer */}
      <div className="mt-4 text-xs text-gray-500 border-t pt-3">
        ü§ñ Generated by Gemini AI ‚Ä¢ Based on Open-Meteo weather data for Lahore
      </div>

      {insight.error && (
        <div className="mt-2 p-2 bg-yellow-100 border border-yellow-300 rounded text-xs text-yellow-800">
          ‚ö†Ô∏è {insight.error}
        </div>
      )}
    </div>
  );
}