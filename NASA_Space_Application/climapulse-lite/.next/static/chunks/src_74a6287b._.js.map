{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Hackathons%20-%20Coding%20Competetion/Nasa%20Space%20Apps%20Application/climapulse-lite/src/components/Header.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\n\r\ninterface HeaderProps {\r\n  currentTemp?: number;\r\n  condition?: string;\r\n}\r\n\r\nexport default function Header({ currentTemp, condition }: HeaderProps) {\r\n  return (\r\n    <header className=\"bg-gradient-to-r from-blue-500 to-cyan-600 text-white shadow-lg\">\r\n      <div className=\"container mx-auto px-4 py-6\">\r\n        <div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\r\n          <div className=\"mb-4 md:mb-0\">\r\n            <h1 className=\"text-3xl md:text-4xl font-bold flex items-center gap-2\">\r\n              üåç ClimaPulse Lite\r\n            </h1>\r\n            <p className=\"text-blue-100 mt-2 text-lg\">\r\n              Lahore Climate Trends Dashboard\r\n            </p>\r\n          </div>\r\n          \r\n          {currentTemp && (\r\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-lg p-4 min-w-[200px]\">\r\n              <div className=\"text-sm text-blue-100 mb-1\">Current Weather</div>\r\n              <div className=\"text-2xl font-bold\">\r\n                {Math.round(currentTemp)}¬∞C\r\n              </div>\r\n              <div className=\"text-sm text-blue-100\">\r\n                {condition || 'Loading...'}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"mt-4 text-sm text-blue-100\">\r\n          üöÄ Built for NASA Space Apps Challenge 2025 ‚Ä¢ Real-time climate data with AI insights\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAAA;;AASe,SAAS,OAAO,KAAuC;QAAvC,EAAE,WAAW,EAAE,SAAS,EAAe,GAAvC;IAC7B,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAyD;;;;;;8CAGvE,6LAAC;oCAAE,WAAU;8CAA6B;;;;;;;;;;;;wBAK3C,6BACC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CAA6B;;;;;;8CAC5C,6LAAC;oCAAI,WAAU;;wCACZ,KAAK,KAAK,CAAC;wCAAa;;;;;;;8CAE3B,6LAAC;oCAAI,WAAU;8CACZ,aAAa;;;;;;;;;;;;;;;;;;8BAMtB,6LAAC;oBAAI,WAAU;8BAA6B;;;;;;;;;;;;;;;;;AAMpD;KAjCwB","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///D:/Hackathons%20-%20Coding%20Competetion/Nasa%20Space%20Apps%20Application/climapulse-lite/src/components/ClimateChart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n} from 'chart.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { WeatherData } from '@/utils/openMeteo';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\ninterface ClimateChartProps {\r\n  data: WeatherData;\r\n  type: 'temperature' | 'precipitation';\r\n  title: string;\r\n}\r\n\r\nexport default function ClimateChart({ data, type, title }: ClimateChartProps) {\r\n  const [chartData, setChartData] = useState<{\r\n    labels: string[];\r\n    datasets: Array<{\r\n      label: string;\r\n      data: number[];\r\n      [key: string]: unknown;\r\n    }>;\r\n  } | null>(null);\r\n  const [chartOptions, setChartOptions] = useState<Record<string, unknown>>({});\r\n\r\n  useEffect(() => {\r\n    if (!data || data.dates.length === 0) return;\r\n\r\n    // Aggregate data by month for better visualization\r\n    const monthlyData = aggregateByMonth(data, type);\r\n\r\n    if (type === 'temperature') {\r\n      setChartData({\r\n        labels: monthlyData.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Average Temperature (¬∞C)',\r\n            data: monthlyData.values,\r\n            borderColor: 'rgb(239, 68, 68)',\r\n            backgroundColor: 'rgba(239, 68, 68, 0.1)',\r\n            borderWidth: 2,\r\n            fill: true,\r\n            tension: 0.4,\r\n          },\r\n        ],\r\n      });\r\n\r\n      setChartOptions({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top' as const,\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: title,\r\n            font: {\r\n              size: 16,\r\n              weight: 'bold',\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: false,\r\n            grid: {\r\n              color: 'rgba(0, 0, 0, 0.1)',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Temperature (¬∞C)',\r\n            },\r\n          },\r\n          x: {\r\n            grid: {\r\n              color: 'rgba(0, 0, 0, 0.1)',\r\n            },\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      setChartData({\r\n        labels: monthlyData.labels,\r\n        datasets: [\r\n          {\r\n            label: 'Monthly Precipitation (mm)',\r\n            data: monthlyData.values,\r\n            backgroundColor: 'rgba(59, 130, 246, 0.6)',\r\n            borderColor: 'rgb(59, 130, 246)',\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      });\r\n\r\n      setChartOptions({\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top' as const,\r\n          },\r\n          title: {\r\n            display: true,\r\n            text: title,\r\n            font: {\r\n              size: 16,\r\n              weight: 'bold',\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n            grid: {\r\n              color: 'rgba(0, 0, 0, 0.1)',\r\n            },\r\n            title: {\r\n              display: true,\r\n              text: 'Precipitation (mm)',\r\n            },\r\n          },\r\n          x: {\r\n            grid: {\r\n              color: 'rgba(0, 0, 0, 0.1)',\r\n            },\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }, [data, type, title]);\r\n\r\n  if (!chartData) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"h-4 bg-gray-200 rounded mb-4\"></div>\r\n          <div className=\"h-64 bg-gray-100 rounded\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n      <div className=\"chart-container h-80\">\r\n        {type === 'temperature' ? (\r\n          <Line data={chartData} options={chartOptions} />\r\n        ) : (\r\n          <Bar data={chartData} options={chartOptions} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction aggregateByMonth(data: WeatherData, type: 'temperature' | 'precipitation') {\r\n  const monthlyAgg: { [key: string]: number[] } = {};\r\n\r\n  data.dates.forEach((date, index) => {\r\n    const monthKey = date.substring(0, 7); // YYYY-MM\r\n    if (!monthlyAgg[monthKey]) {\r\n      monthlyAgg[monthKey] = [];\r\n    }\r\n    \r\n    const value = type === 'temperature' \r\n      ? data.temperatures[index] \r\n      : data.precipitation[index];\r\n    \r\n    if (value !== undefined && !isNaN(value)) {\r\n      monthlyAgg[monthKey].push(value);\r\n    }\r\n  });\r\n\r\n  const labels: string[] = [];\r\n  const values: number[] = [];\r\n\r\n  Object.keys(monthlyAgg)\r\n    .sort()\r\n    .forEach(monthKey => {\r\n      const monthData = monthlyAgg[monthKey];\r\n      if (monthData.length > 0) {\r\n        const [year, month] = monthKey.split('-');\r\n        const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n                           'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        labels.push(`${monthNames[parseInt(month) - 1]} ${year}`);\r\n        \r\n        if (type === 'temperature') {\r\n          // Average temperature for the month\r\n          const avg = monthData.reduce((sum, val) => sum + val, 0) / monthData.length;\r\n          values.push(Math.round(avg * 10) / 10);\r\n        } else {\r\n          // Total precipitation for the month\r\n          const total = monthData.reduce((sum, val) => sum + val, 0);\r\n          values.push(Math.round(total * 10) / 10);\r\n        }\r\n      }\r\n    });\r\n\r\n  return { labels, values };\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///D:/Hackathons%20-%20Coding%20Competetion/Nasa%20Space%20Apps%20Application/climapulse-lite/src/components/ClimateMap.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { CurrentWeather } from '@/utils/openMeteo';\r\n\r\n// Dynamically import Leaflet components to avoid SSR issues\r\nconst MapContainer = dynamic(\r\n  () => import('react-leaflet').then((mod) => mod.MapContainer),\r\n  { ssr: false }\r\n);\r\n\r\nconst TileLayer = dynamic(\r\n  () => import('react-leaflet').then((mod) => mod.TileLayer),\r\n  { ssr: false }\r\n);\r\n\r\nconst Marker = dynamic(\r\n  () => import('react-leaflet').then((mod) => mod.Marker),\r\n  { ssr: false }\r\n);\r\n\r\nconst Popup = dynamic(\r\n  () => import('react-leaflet').then((mod) => mod.Popup),\r\n  { ssr: false }\r\n);\r\n\r\ninterface ClimateMapProps {\r\n  currentWeather?: CurrentWeather | null;\r\n}\r\n\r\nexport default function ClimateMap({ currentWeather }: ClimateMapProps) {\r\n  const [isClient, setIsClient] = useState(false);\r\n  const [L, setL] = useState<typeof import('leaflet') | null>(null);\r\n\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n    // Dynamically import Leaflet to avoid SSR issues\r\n    import('leaflet').then((leaflet) => {\r\n      setL(leaflet.default);\r\n      \r\n      // Fix for default markers in Next.js\r\n      delete (leaflet.default.Icon.Default.prototype as unknown as Record<string, unknown>)._getIconUrl;\r\n      leaflet.default.Icon.Default.mergeOptions({\r\n        iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n        iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const lahorePosition: [number, number] = [31.5497, 74.3436];\r\n\r\n  if (!isClient || !L) {\r\n    return (\r\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"h-4 bg-gray-200 rounded mb-4 w-1/3\"></div>\r\n          <div className=\"h-64 bg-gray-100 rounded\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n      <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">\r\n        üìç Lahore, Pakistan\r\n      </h3>\r\n      \r\n      <div className=\"h-64 rounded-lg overflow-hidden border\">\r\n        <MapContainer\r\n          center={lahorePosition}\r\n          zoom={10}\r\n          style={{ height: '100%', width: '100%' }}\r\n          scrollWheelZoom={false}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker position={lahorePosition}>\r\n            <Popup>\r\n              <div className=\"text-center\">\r\n                <strong>Lahore, Pakistan</strong><br />\r\n                31.5497¬∞N, 74.3436¬∞E\r\n                {currentWeather && (\r\n                  <div className=\"mt-2 p-2 bg-blue-50 rounded\">\r\n                    <div className=\"text-sm font-medium\">Current Weather</div>\r\n                    <div className=\"text-lg font-bold text-blue-600\">\r\n                      {Math.round(currentWeather.temperature)}¬∞C\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">\r\n                      {currentWeather.condition}\r\n                    </div>\r\n                    <div className=\"text-xs text-gray-500 mt-1\">\r\n                      Humidity: {Math.round(currentWeather.humidity)}% ‚Ä¢{' '}\r\n                      Precipitation: {currentWeather.precipitation}mm\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Popup>\r\n          </Marker>\r\n        </MapContainer>\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      {currentWeather && (\r\n        <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\r\n          <div className=\"bg-blue-50 p-3 rounded\">\r\n            <div className=\"text-blue-600 font-medium\">Temperature</div>\r\n            <div className=\"text-2xl font-bold text-blue-800\">\r\n              {Math.round(currentWeather.temperature)}¬∞C\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-green-50 p-3 rounded\">\r\n            <div className=\"text-green-600 font-medium\">Humidity</div>\r\n            <div className=\"text-2xl font-bold text-green-800\">\r\n              {Math.round(currentWeather.humidity)}%\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"mt-4 text-xs text-gray-500\">\r\n        üì° Data source: Open-Meteo API ‚Ä¢ üó∫Ô∏è Map: OpenStreetMap\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///D:/Hackathons%20-%20Coding%20Competetion/Nasa%20Space%20Apps%20Application/climapulse-lite/src/components/InsightBox.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { ClimateInsight } from '@/utils/gemini';\r\n\r\ninterface InsightBoxProps {\r\n  insight: ClimateInsight | null;\r\n  loading: boolean;\r\n  onRegenerate: () => void;\r\n}\r\n\r\nexport default function InsightBox({ insight, loading, onRegenerate }: InsightBoxProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-gradient-to-br from-purple-50 to-blue-50 rounded-lg shadow-md p-6\">\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"flex items-center gap-2 mb-4\">\r\n            <div className=\"h-6 w-6 bg-purple-200 rounded\"></div>\r\n            <div className=\"h-4 bg-purple-200 rounded w-1/3\"></div>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"h-4 bg-gray-200 rounded w-full\"></div>\r\n            <div className=\"h-4 bg-gray-200 rounded w-5/6\"></div>\r\n            <div className=\"h-4 bg-gray-200 rounded w-4/6\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!insight) {\r\n    return (\r\n      <div className=\"bg-gray-50 rounded-lg shadow-md p-6 text-center\">\r\n        <div className=\"text-gray-500 mb-4\">\r\n          ü§ñ AI insights will appear here after data loads\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gradient-to-br from-purple-50 to-blue-50 rounded-lg shadow-md p-6\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-purple-800 flex items-center gap-2\">\r\n          üß† AI Climate Insights\r\n        </h3>\r\n        <button\r\n          onClick={onRegenerate}\r\n          className=\"px-3 py-1 bg-purple-600 text-white text-sm rounded-md hover:bg-purple-700 transition-colors\"\r\n          title=\"Generate new insight\"\r\n        >\r\n          ‚Üª Refresh\r\n        </button>\r\n      </div>\r\n\r\n      {/* Summary */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"text-gray-800 leading-relaxed\">\r\n          {insight.summary}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Findings */}\r\n      <div className=\"mb-4\">\r\n        <h4 className=\"font-medium text-gray-800 mb-2 flex items-center gap-1\">\r\n          üîç Key Findings\r\n        </h4>\r\n        <ul className=\"space-y-2\">\r\n          {insight.keyFindings.slice(0, isExpanded ? insight.keyFindings.length : 2).map((finding, index) => (\r\n            <li key={index} className=\"flex items-start gap-2 text-sm text-gray-700\">\r\n              <span className=\"text-blue-500 mt-1\">‚Ä¢</span>\r\n              <span>{finding}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        \r\n        {insight.keyFindings.length > 2 && (\r\n          <button\r\n            onClick={() => setIsExpanded(!isExpanded)}\r\n            className=\"text-blue-600 text-sm mt-2 hover:text-blue-800 transition-colors\"\r\n          >\r\n            {isExpanded ? 'Show less ‚ñ≤' : `Show ${insight.keyFindings.length - 2} more ‚ñº`}\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Outlook */}\r\n      <div className=\"bg-white/60 rounded-lg p-4 border border-blue-100\">\r\n        <h4 className=\"font-medium text-gray-800 mb-2 flex items-center gap-1\">\r\n          üîÆ Outlook\r\n        </h4>\r\n        <div className=\"text-sm text-gray-700 leading-relaxed\">\r\n          {insight.outlook}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <div className=\"mt-4 text-xs text-gray-500 border-t pt-3\">\r\n        ü§ñ Generated by Gemini AI ‚Ä¢ Based on Open-Meteo weather data for Lahore\r\n      </div>\r\n\r\n      {insight.error && (\r\n        <div className=\"mt-2 p-2 bg-yellow-100 border border-yellow-300 rounded text-xs text-yellow-800\">\r\n          ‚ö†Ô∏è {insight.error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AAWe,SAAS,WAAW,KAAmD;QAAnD,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAmB,GAAnD;;IACjC,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAE7C,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;;;;;;;kCAEjB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;IAKzB;IAEA,IAAI,CAAC,SAAS;QACZ,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BAAqB;;;;;;;;;;;IAK1C;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAgE;;;;;;kCAG9E,6LAAC;wBACC,SAAS;wBACT,WAAU;wBACV,OAAM;kCACP;;;;;;;;;;;;0BAMH,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACZ,QAAQ,OAAO;;;;;;;;;;;0BAKpB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyD;;;;;;kCAGvE,6LAAC;wBAAG,WAAU;kCACX,QAAQ,WAAW,CAAC,KAAK,CAAC,GAAG,aAAa,QAAQ,WAAW,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,SAAS,sBACvF,6LAAC;gCAAe,WAAU;;kDACxB,6LAAC;wCAAK,WAAU;kDAAqB;;;;;;kDACrC,6LAAC;kDAAM;;;;;;;+BAFA;;;;;;;;;;oBAOZ,QAAQ,WAAW,CAAC,MAAM,GAAG,mBAC5B,6LAAC;wBACC,SAAS,IAAM,cAAc,CAAC;wBAC9B,WAAU;kCAET,aAAa,gBAAgB,AAAC,QAAsC,OAA/B,QAAQ,WAAW,CAAC,MAAM,GAAG,GAAE;;;;;;;;;;;;0BAM3E,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyD;;;;;;kCAGvE,6LAAC;wBAAI,WAAU;kCACZ,QAAQ,OAAO;;;;;;;;;;;;0BAKpB,6LAAC;gBAAI,WAAU;0BAA2C;;;;;;YAIzD,QAAQ,KAAK,kBACZ,6LAAC;gBAAI,WAAU;;oBAAkF;oBAC3F,QAAQ,KAAK;;;;;;;;;;;;;AAK3B;GAnGwB;KAAA","debugId":null}},
    {"offset": {"line": 969, "column": 0}, "map": {"version":3,"sources":["file:///D:/Hackathons%20-%20Coding%20Competetion/Nasa%20Space%20Apps%20Application/climapulse-lite/src/utils/openMeteo.ts"],"sourcesContent":["// Open-Meteo API utility for fetching Lahore climate data\r\n// Coordinates for Lahore, Pakistan: 31.5497¬∞N, 74.3436¬∞E\r\n\r\nexport interface WeatherData {\r\n  dates: string[];\r\n  temperatures: number[];\r\n  precipitation: number[];\r\n  humidity: number[];\r\n}\r\n\r\nexport interface CurrentWeather {\r\n  temperature: number;\r\n  humidity: number;\r\n  precipitation: number;\r\n  condition: string;\r\n}\r\n\r\nconst LAHORE_LAT = 31.5497;\r\nconst LAHORE_LON = 74.3436;\r\n\r\n/**\r\n * Fetch historical weather data for Lahore from Open-Meteo\r\n * @param startDate Start date in YYYY-MM-DD format\r\n * @param endDate End date in YYYY-MM-DD format\r\n */\r\nexport async function fetchHistoricalData(\r\n  startDate: string = '2020-01-01',\r\n  endDate: string = '2024-12-31'\r\n): Promise<WeatherData> {\r\n  try {\r\n    const response = await fetch(\r\n      `https://archive-api.open-meteo.com/v1/archive?` +\r\n      `latitude=${LAHORE_LAT}&longitude=${LAHORE_LON}` +\r\n      `&start_date=${startDate}&end_date=${endDate}` +\r\n      `&daily=temperature_2m_mean,precipitation_sum,relative_humidity_2m_mean` +\r\n      `&timezone=Asia/Karachi`\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Weather API error: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    return {\r\n      dates: data.daily.time || [],\r\n      temperatures: data.daily.temperature_2m_mean || [],\r\n      precipitation: data.daily.precipitation_sum || [],\r\n      humidity: data.daily.relative_humidity_2m_mean || [],\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching historical data:', error);\r\n    // Return mock data in case of API failure\r\n    return generateMockData(startDate, endDate);\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch current weather data for Lahore\r\n */\r\nexport async function fetchCurrentWeather(): Promise<CurrentWeather> {\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.open-meteo.com/v1/forecast?` +\r\n      `latitude=${LAHORE_LAT}&longitude=${LAHORE_LON}` +\r\n      `&current=temperature_2m,relative_humidity_2m,precipitation` +\r\n      `&timezone=Asia/Karachi`\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Weather API error: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    \r\n    return {\r\n      temperature: data.current.temperature_2m || 25,\r\n      humidity: data.current.relative_humidity_2m || 60,\r\n      precipitation: data.current.precipitation || 0,\r\n      condition: data.current.precipitation > 0 ? 'Rainy' : 'Clear',\r\n    };\r\n  } catch (error) {\r\n    console.error('Error fetching current weather:', error);\r\n    // Return mock current data\r\n    return {\r\n      temperature: 28.5,\r\n      humidity: 65,\r\n      precipitation: 0.2,\r\n      condition: 'Partly Cloudy'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Generate mock weather data for fallback\r\n */\r\nfunction generateMockData(startDate: string, endDate: string): WeatherData {\r\n  const dates: string[] = [];\r\n  const temperatures: number[] = [];\r\n  const precipitation: number[] = [];\r\n  const humidity: number[] = [];\r\n\r\n  const start = new Date(startDate);\r\n  const end = new Date(endDate);\r\n  const current = new Date(start);\r\n\r\n  while (current <= end) {\r\n    dates.push(current.toISOString().split('T')[0]);\r\n    \r\n    // Mock temperature with seasonal variation (Lahore climate)\r\n    const dayOfYear = current.getMonth() * 30 + current.getDate();\r\n    const baseTemp = 25 + 10 * Math.sin((dayOfYear / 365) * 2 * Math.PI);\r\n    temperatures.push(baseTemp + Math.random() * 6 - 3);\r\n    \r\n    // Mock precipitation (monsoon season Jun-Sep)\r\n    const isMonsooon = current.getMonth() >= 5 && current.getMonth() <= 8;\r\n    precipitation.push(isMonsooon ? Math.random() * 20 : Math.random() * 3);\r\n    \r\n    // Mock humidity\r\n    humidity.push(50 + Math.random() * 30);\r\n    \r\n    current.setDate(current.getDate() + 1);\r\n  }\r\n\r\n  return { dates, temperatures, precipitation, humidity };\r\n}\r\n\r\n/**\r\n * Calculate climate trends from historical data\r\n */\r\nexport function calculateTrends(data: WeatherData) {\r\n  if (data.temperatures.length === 0) return null;\r\n\r\n  const avgTemp = data.temperatures.reduce((sum, temp) => sum + temp, 0) / data.temperatures.length;\r\n  const totalPrecipitation = data.precipitation.reduce((sum, prec) => sum + prec, 0);\r\n  const avgHumidity = data.humidity.reduce((sum, hum) => sum + hum, 0) / data.humidity.length;\r\n\r\n  // Simple linear trend calculation for temperature\r\n  const tempTrend = calculateLinearTrend(data.temperatures);\r\n\r\n  return {\r\n    averageTemperature: Math.round(avgTemp * 10) / 10,\r\n    totalPrecipitation: Math.round(totalPrecipitation),\r\n    averageHumidity: Math.round(avgHumidity),\r\n    temperatureTrend: Math.round(tempTrend * 1000) / 1000, // degrees per year\r\n  };\r\n}\r\n\r\nfunction calculateLinearTrend(values: number[]): number {\r\n  const n = values.length;\r\n  const x = Array.from({ length: n }, (_, i) => i);\r\n  const xSum = x.reduce((sum, val) => sum + val, 0);\r\n  const ySum = values.reduce((sum, val) => sum + val, 0);\r\n  const xySum = x.reduce((sum, val, i) => sum + val * values[i], 0);\r\n  const xxSum = x.reduce((sum, val) => sum + val * val, 0);\r\n\r\n  const slope = (n * xySum - xSum * ySum) / (n * xxSum - xSum * xSum);\r\n  return slope;\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1088, "column": 0}, "map": {"version":3,"sources":["file:///D:/Hackathons%20-%20Coding%20Competetion/Nasa%20Space%20Apps%20Application/climapulse-lite/src/utils/gemini.ts"],"sourcesContent":["// Gemini AI utility for generating climate insights\r\nimport { GoogleGenerativeAI } from '@google/generative-ai';\r\n\r\nexport interface ClimateInsight {\r\n  summary: string;\r\n  keyFindings: string[];\r\n  outlook: string;\r\n  error?: string;\r\n}\r\n\r\nlet genAI: GoogleGenerativeAI | null = null;\r\n\r\nfunction initializeGemini() {\r\n  const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;\r\n  if (!apiKey) {\r\n    console.warn('Gemini API key not found. AI insights will be mocked.');\r\n    return null;\r\n  }\r\n  \r\n  if (!genAI) {\r\n    genAI = new GoogleGenerativeAI(apiKey);\r\n  }\r\n  return genAI;\r\n}\r\n\r\n/**\r\n * Generate climate insights from weather data trends\r\n */\r\nexport async function generateClimateInsight(\r\n  trends: {\r\n    averageTemperature: number;\r\n    totalPrecipitation: number;\r\n    averageHumidity: number;\r\n    temperatureTrend: number;\r\n  },\r\n  startYear: string = '2020',\r\n  endYear: string = '2024'\r\n): Promise<ClimateInsight> {\r\n  try {\r\n    const gemini = initializeGemini();\r\n    \r\n    if (!gemini) {\r\n      return generateMockInsight(trends, startYear, endYear);\r\n    }\r\n\r\n    const model = gemini.getGenerativeModel({ model: 'gemini-pro' });\r\n    \r\n    const prompt = `\r\nAs a climate data analyst, analyze the following weather trends for Lahore, Pakistan from ${startYear} to ${endYear}:\r\n\r\n- Average Temperature: ${trends.averageTemperature}¬∞C\r\n- Total Precipitation: ${trends.totalPrecipitation}mm\r\n- Average Humidity: ${trends.averageHumidity}%\r\n- Temperature Trend: ${trends.temperatureTrend > 0 ? '+' : ''}${trends.temperatureTrend}¬∞C per year\r\n\r\nPlease provide:\r\n1. A brief summary (2-3 sentences) of the overall climate pattern\r\n2. 3-4 key findings about temperature, precipitation, and humidity trends\r\n3. A short outlook statement about what this means for the city\r\n\r\nKeep it concise, scientific but accessible to the general public. Focus on concrete numbers and practical implications.\r\n`;\r\n\r\n    const result = await model.generateContent(prompt);\r\n    const response = await result.response;\r\n    const text = response.text();\r\n\r\n    return parseGeminiResponse(text, trends);\r\n    \r\n  } catch (error) {\r\n    console.error('Error generating AI insight:', error);\r\n    return generateMockInsight(trends, startYear, endYear);\r\n  }\r\n}\r\n\r\n/**\r\n * Parse Gemini response into structured insight\r\n */\r\nfunction parseGeminiResponse(text: string, trends: {\r\n  averageTemperature: number;\r\n  totalPrecipitation: number;\r\n  averageHumidity: number;\r\n  temperatureTrend: number;\r\n}): ClimateInsight {\r\n  try {\r\n    // Simple parsing - could be improved with more sophisticated NLP\r\n    const paragraphs = text.split('\\n\\n').filter(p => p.trim());\r\n    \r\n    const summary = paragraphs[0] || generateDefaultSummary(trends);\r\n    \r\n    // Extract key findings (look for bullet points or numbered lists)\r\n    const keyFindings = paragraphs\r\n      .slice(1, -1)\r\n      .flatMap(p => p.split('\\n'))\r\n      .filter(line => line.includes('‚Ä¢') || line.includes('-') || line.match(/^\\d+\\./))\r\n      .map(line => line.replace(/^[\\s\\-\\‚Ä¢\\d\\.]+/, '').trim())\r\n      .filter(line => line.length > 10)\r\n      .slice(0, 4);\r\n\r\n    const outlook = paragraphs[paragraphs.length - 1] || generateDefaultOutlook();\r\n\r\n    return {\r\n      summary: summary.replace(/^\\d+\\.\\s*/, '').trim(),\r\n      keyFindings: keyFindings.length > 0 ? keyFindings : generateDefaultKeyFindings(trends),\r\n      outlook: outlook.replace(/^\\d+\\.\\s*/, '').trim(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error parsing Gemini response:', error);\r\n    return generateMockInsight(trends, '2020', '2024');\r\n  }\r\n}\r\n\r\n/**\r\n * Generate mock insight when AI is unavailable\r\n */\r\nfunction generateMockInsight(\r\n  trends: {\r\n    averageTemperature: number;\r\n    totalPrecipitation: number;\r\n    averageHumidity: number;\r\n    temperatureTrend: number;\r\n  },\r\n  startYear: string,\r\n  endYear: string\r\n): ClimateInsight {\r\n  const tempChange = trends.temperatureTrend > 0 ? 'warming' : 'cooling';\r\n  const tempDirection = trends.temperatureTrend > 0 ? 'increased' : 'decreased';\r\n  \r\n  return {\r\n    summary: `Lahore's climate from ${startYear} to ${endYear} shows a ${tempChange} trend with an average temperature of ${trends.averageTemperature}¬∞C. The city experienced ${trends.totalPrecipitation}mm of total precipitation with ${trends.averageHumidity}% average humidity, indicating typical subtropical conditions.`,\r\n    keyFindings: [\r\n      `Temperature has ${tempDirection} by approximately ${Math.abs(trends.temperatureTrend * 4).toFixed(2)}¬∞C over the 4-year period`,\r\n      `Annual precipitation averaged ${Math.round(trends.totalPrecipitation / 4)}mm per year, reflecting monsoon patterns`,\r\n      `Humidity levels remained consistent at ${trends.averageHumidity}%, typical for the region's subtropical climate`,\r\n      `Climate patterns align with seasonal variations expected in Punjab province`\r\n    ],\r\n    outlook: `These trends suggest Lahore continues to experience typical subtropical climate patterns. The ${tempChange} trend warrants monitoring for urban planning and environmental management. Residents should prepare for continued seasonal variations with emphasis on ${trends.temperatureTrend > 0 ? 'heat management' : 'temperature fluctuations'}.`\r\n  };\r\n}\r\n\r\nfunction generateDefaultSummary(trends: {\r\n  averageTemperature: number;\r\n  totalPrecipitation: number;\r\n  averageHumidity: number;\r\n  temperatureTrend: number;\r\n}): string {\r\n  return `Climate analysis shows average temperatures of ${trends.averageTemperature}¬∞C with moderate precipitation patterns and stable humidity levels.`;\r\n}\r\n\r\nfunction generateDefaultKeyFindings(trends: {\r\n  averageTemperature: number;\r\n  totalPrecipitation: number;\r\n  averageHumidity: number;\r\n  temperatureTrend: number;\r\n}): string[] {\r\n  return [\r\n    `Average temperature: ${trends.averageTemperature}¬∞C`,\r\n    `Total precipitation: ${trends.totalPrecipitation}mm`,\r\n    `Average humidity: ${trends.averageHumidity}%`,\r\n    `Temperature trend: ${trends.temperatureTrend > 0 ? '+' : ''}${trends.temperatureTrend}¬∞C/year`\r\n  ];\r\n}\r\n\r\nfunction generateDefaultOutlook(): string {\r\n  return `Current trends suggest continued monitoring is important for understanding Lahore's changing climate patterns.`;\r\n}\r\n\r\n/**\r\n * Validate API key availability\r\n */\r\nexport function hasGeminiApiKey(): boolean {\r\n  return !!process.env.NEXT_PUBLIC_GEMINI_API_KEY;\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1188, "column": 0}, "map": {"version":3,"sources":["file:///D:/Hackathons%20-%20Coding%20Competetion/Nasa%20Space%20Apps%20Application/climapulse-lite/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport Header from '@/components/Header';\nimport ClimateChart from '@/components/ClimateChart';\nimport ClimateMap from '@/components/ClimateMap';\nimport InsightBox from '@/components/InsightBox';\nimport { \n  fetchHistoricalData, \n  fetchCurrentWeather, \n  calculateTrends,\n  WeatherData,\n  CurrentWeather \n} from '@/utils/openMeteo';\nimport { generateClimateInsight, ClimateInsight } from '@/utils/gemini';\n\nexport default function Home() {\n  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);\n  const [currentWeather, setCurrentWeather] = useState<CurrentWeather | null>(null);\n  const [insight, setInsight] = useState<ClimateInsight | null>(null);\n  const [loading, setLoading] = useState({\n    weather: true,\n    current: true,\n    insight: false,\n  });\n  const [error, setError] = useState<string | null>(null);\n\n  const loadWeatherData = async () => {\n    try {\n      setLoading(prev => ({ ...prev, weather: true }));\n      const data = await fetchHistoricalData('2020-01-01', '2024-12-31');\n      setWeatherData(data);\n    } catch (err) {\n      setError('Failed to load weather data');\n      console.error('Error loading weather data:', err);\n    } finally {\n      setLoading(prev => ({ ...prev, weather: false }));\n    }\n  };\n\n  const loadCurrentWeather = async () => {\n    try {\n      setLoading(prev => ({ ...prev, current: true }));\n      const current = await fetchCurrentWeather();\n      setCurrentWeather(current);\n    } catch (err) {\n      console.error('Error loading current weather:', err);\n    } finally {\n      setLoading(prev => ({ ...prev, current: false }));\n    }\n  };\n\n  const generateInsights = useCallback(async () => {\n    if (!weatherData) return;\n\n    try {\n      setLoading(prev => ({ ...prev, insight: true }));\n      const trends = calculateTrends(weatherData);\n      \n      if (trends) {\n        const generatedInsight = await generateClimateInsight(trends, '2020', '2024');\n        setInsight(generatedInsight);\n      }\n    } catch (err) {\n      console.error('Error generating insights:', err);\n    } finally {\n      setLoading(prev => ({ ...prev, insight: false }));\n    }\n  }, [weatherData]);\n\n  // Load data on component mount\n  useEffect(() => {\n    loadWeatherData();\n    loadCurrentWeather();\n  }, []);\n\n  // Generate insights when weather data is loaded\n  useEffect(() => {\n    if (weatherData && !insight) {\n      generateInsights();\n    }\n  }, [weatherData, insight, generateInsights]);\n\n  const regenerateInsights = () => {\n    setInsight(null);\n    generateInsights();\n  };\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"bg-white p-8 rounded-lg shadow-md text-center max-w-md\">\n          <div className=\"text-red-500 text-6xl mb-4\">‚ö†Ô∏è</div>\n          <h1 className=\"text-xl font-bold text-gray-800 mb-2\">Error Loading Data</h1>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header \n        currentTemp={currentWeather?.temperature} \n        condition={currentWeather?.condition}\n      />\n      \n      <main className=\"container mx-auto px-4 py-8\">\n        {/* Stats Overview */}\n        {weatherData && (\n          <div className=\"mb-8 grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {(() => {\n              const trends = calculateTrends(weatherData);\n              return trends ? [\n                {\n                  label: 'Avg Temperature',\n                  value: `${trends.averageTemperature}¬∞C`,\n                  icon: 'üå°Ô∏è',\n                  color: 'red'\n                },\n                {\n                  label: 'Total Precipitation', \n                  value: `${trends.totalPrecipitation}mm`,\n                  icon: 'üåßÔ∏è',\n                  color: 'blue'\n                },\n                {\n                  label: 'Avg Humidity',\n                  value: `${trends.averageHumidity}%`,\n                  icon: 'üíß',\n                  color: 'green'\n                }\n              ].map((stat, index) => (\n                <div key={index} className=\"bg-white rounded-lg shadow-md p-6 text-center\">\n                  <div className=\"text-3xl mb-2\">{stat.icon}</div>\n                  <div className=\"text-2xl font-bold text-gray-800\">{stat.value}</div>\n                  <div className=\"text-sm text-gray-600\">{stat.label}</div>\n                </div>\n              )) : null;\n            })()}\n          </div>\n        )}\n\n        {/* Main Content Grid */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Left Column */}\n          <div className=\"space-y-8\">\n            {/* Temperature Chart */}\n            {loading.weather ? (\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"animate-pulse\">\n                  <div className=\"h-4 bg-gray-200 rounded mb-4\"></div>\n                  <div className=\"h-80 bg-gray-100 rounded\"></div>\n                </div>\n              </div>\n            ) : weatherData ? (\n              <ClimateChart \n                data={weatherData} \n                type=\"temperature\" \n                title=\"Temperature Trends (2020-2024)\"\n              />\n            ) : null}\n            \n            {/* Precipitation Chart */}\n            {loading.weather ? (\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"animate-pulse\">\n                  <div className=\"h-4 bg-gray-200 rounded mb-4\"></div>\n                  <div className=\"h-80 bg-gray-100 rounded\"></div>\n                </div>\n              </div>\n            ) : weatherData ? (\n              <ClimateChart \n                data={weatherData} \n                type=\"precipitation\" \n                title=\"Precipitation Patterns (2020-2024)\"\n              />\n            ) : null}\n          </div>\n\n          {/* Right Column */}\n          <div className=\"space-y-8\">\n            {/* Map */}\n            <ClimateMap currentWeather={currentWeather} />\n            \n            {/* AI Insights */}\n            <InsightBox \n              insight={insight}\n              loading={loading.insight}\n              onRegenerate={regenerateInsights}\n            />\n          </div>\n        </div>\n        \n        {/* Footer */}\n        <footer className=\"mt-16 text-center text-sm text-gray-500\">\n          <div className=\"border-t pt-8\">\n            <p className=\"mb-2\">\n              üåç <strong>ClimaPulse Lite</strong> ‚Ä¢ Built for NASA Space Apps Challenge 2025\n            </p>\n            <p>\n              Data: <a href=\"https://open-meteo.com\" className=\"text-blue-600 hover:underline\">Open-Meteo</a> ‚Ä¢ \n              AI: <a href=\"https://ai.google.dev\" className=\"text-blue-600 hover:underline\">Gemini</a> ‚Ä¢ \n              Made with ‚ù§Ô∏è for climate awareness\n            </p>\n          </div>\n        </footer>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}